#ifndef CONFIG_H
#define CONFIG_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

typedef enum {
    ENUM_SUPPORTED_ARCHS_INVALID,
    ENUM_SUPPORTED_ARCHS_RISCV64I_LSB,
    ENUM_SUPPORTED_ARCHS_MIPS64_MSB,
} enum_supported_archs_t;

typedef struct {
    bool                   verbosity;
    bool                   coverage;
    uint64_t               nb_cpus;
    char*                  progress_dir;
    char*                  crashes_dir;
    char*                  inputs_dir; // Inputs generated by mutation based fuzing.
    char*                  corpus_dir; // Initial inputs provided by the user.
    char*                  target;
    enum_supported_archs_t arch;
} global_config_t;

void
global_config_set_verbosity(bool verbosity);

void
global_config_set_coverage(bool coverage);

void
global_config_set_nb_cpus(uint64_t nb_cpus);

void
global_config_set_progress_dir(char* progress_dir);

void
global_config_set_crashes_dir(char* crashes_dir);

void
global_config_set_inputs_dir(char* inputs_dir);

void
global_config_set_corpus_dir(char* corpus_dir);

void
global_config_set_target(char* target);

void
global_config_set_arch(char* arch);

bool
global_config_get_verbosity(void);

bool
global_config_get_coverage(void);

uint64_t
global_config_get_nb_cpus(void);

char*
global_config_get_progress_dir(void);

char*
global_config_get_crashes_dir(void);

char*
global_config_get_inputs_dir(void);

char*
global_config_get_corpus_dir(void);

char*
global_config_get_target(void);

enum_supported_archs_t
global_config_get_arch(void);

#endif
